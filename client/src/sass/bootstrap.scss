$icon-font-path: '~@neos21/bootstrap3-glyphicons/assets/fonts/';
@import '_bootstrap';

@import '_variables';
@import '_mixins';

// Thanks https://gist.github.com/alexandrevicenzi/680147013e902a4eaa5d
.glyphicon-refresh-animate {
  animation: spin .7s infinite linear;
}

.flex-auto {
  flex: auto;
}

.c-hand {
  cursor: pointer;
}

@keyframes spin {
  from {
    transform: scale(1) rotate(0deg);
  }
  to {
    transform: scale(1) rotate(360deg);
  }
}

/* rules for dropdowns excepts when in button group, to avoid impacting the dropdown-toggle */
.dropdown:not(.btn-group):not(.dropdown-root):not(.action-dropdown) {
  z-index: z(dropdown) !important;

  &.list-overflow-menu,
  &.parent-entry {
    z-index: z(header) - 1 !important;
  }
}

.dropdown-menu {
  border-radius: 3px;
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
  font-size: 15px;

  .dropdown-item {
    padding: 3px 15px;

    &.active {
      color: var(--mainBackgroundColor) !important;
      background-color: var(--mainHoverColor);
      opacity: .9;
    }

    &::after {
      display: none;
    }
  }

  button {
    @include disable-default-a-behaviour;
  }

  a {
    @include disable-default-a-behaviour;
    color: #000 !important;
  }
}


@media screen and (min-width: #{breakpoint(md)}) {
  .modal:before {
    vertical-align: middle;
    content: " ";
    height: 100%;
  }

  .modal-dialog {
    text-align: left;

    &:not(.modal-lg):not(.modal-xl) {
      min-width: 500px;
      width: 40vw;
      max-width: 900px;
    }
  }
}

.modal {
  text-align: center;

  .modal-content {
    background-color: var(--mainBackgroundColor);
  }

  .modal-header {
    border-bottom: none;
    margin-bottom: 5px;

    .modal-title {
      font-size: 20px;
      font-weight: $font-semibold;
    }

    my-global-icon {
      @include icon(22px);

      position: relative;
      top: 5px;
      float: right;

      margin: 0;
      padding: 0;
      opacity: .5;

      &[iconName="cross"] {
        @include icon(16px);
        top: -3px;
      }
    }
  }

  .inputs {
    margin-bottom: 0;
    text-align: right;

    .action-button-cancel {
      @include peertube-button;
      @include tertiary-button;

      display: inline-block;
      margin-right: 10px;
    }

    .action-button-submit {
      @include peertube-button;
      @include orange-button;
    }
  }
}

// Nav customizations
.nav .nav-link {
  display: flex !important;
  align-items: center;
  height: 30px !important;
  padding: 10px 15px !important;
}

.nav.nav-pills {
  font-size: 16px !important;

  .nav-link.active {
    font-weight: $font-semibold !important;
  }

  a {
    @include disable-default-a-behaviour;

    color: var(--mainForegroundColor);
  }
}

.nav-tabs {

  .nav-link {
    @include disable-default-a-behaviour;

    color: var(--mainForegroundColor) !important;
  }
}

.nav-tabs .nav-link {
  &:not(.active) {
    border-bottom: 3px solid transparent;
  }
  &.active {
    font-weight: $font-semibold;
    background-color: var(--mainBackgroundColor) !important;
    border: none;
    border-bottom: 2px solid var(--mainColor);
  }
  &:hover {
    border-top-color: transparent;
    border-left-color: transparent;
    border-right-color: transparent;
  }
}

.card {
  background-color: var(--mainBackgroundColor);
  border-color: #dee2e6;
}

.collapse-transition {
  // Animation when we show/hide the filters
  transition: max-height 0.3s;
  display: block !important;
  overflow: hidden !important;
  max-height: 0;

  &.show {
    max-height: 1500px;
  }
}

.dropdown-divider {
  margin: 0.3rem 0;
}

ngb-modal-backdrop {
  z-index: z(modal) - 1 !important;
}

ngb-modal-window {
  z-index: z(modal) !important;
}

ngb-popover-window {
  z-index: z(popover) !important;
}

ngb-tooltip-window {
  z-index: z(tooltip) !important;
}

.btn-outline-secondary {
  border-color: $input-border-color;

  &:focus-within,
  &:focus,
  &:hover {
    color: #fff;
    background-color: #6c757d;
  }
}

.btn-outline-tertiary {
  color: var(--secondaryColor);
  border-color: var(--secondaryColor);

  &:focus-within,
  &:focus,
  &:hover {
    color: var(--mainBackgroundColor);
    background-color: var(--secondaryColor);
  }
}

// input box-shadow on focus
.form-control {
  font-size: 15px;
  color: var(--mainForegroundColor);
  background-color: var(--inputBackgroundColor);
  outline: none;

  &:focus-within,
  &:focus {
    box-shadow: #{$focus-box-shadow-form} var(--mainColorLightest);

    &.input-error {
      box-shadow: #{$focus-box-shadow-form} #{scale-color($red, $alpha: -75%)};
    }
  }
}

.input-group > .form-control {
  flex: initial;
}
