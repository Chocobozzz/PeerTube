@use '_variables' as *;
@use '_mixins' as *;
@use '_button-mixins' as *;
@use '_form-mixins' as *;

$markdown-icon-height: 18px;
$markdown-icon-width: 30px;
$peertube-textarea-height: 60px;

form {
  margin-bottom: 30px;
}

.avatar-and-textarea {
  display: flex;
  margin-bottom: 10px;

  my-actor-avatar {
    @include margin-right(10px);
  }

  .textarea-wrapper {
    flex-grow: 1;
    position: relative;
  }

  textarea {
    min-height: calc(#{$peertube-textarea-height} - 15px * 2);

    @include peertube-textarea(100%, $peertube-textarea-height);
    @include padding-right($markdown-icon-width + 15px !important);

    @media screen and (max-width: 600px) {
      @include padding-right($markdown-icon-width + 19px !important);
    }

    &:focus::placeholder {
      opacity: 0;
    }
  }
}

.markdown-guide {
  position: absolute;
  top: 5px;
  right: 9px;

  // inset-inline is not well supported by web browsers
  &.is-rtl {
    right: unset;
    left: 9px;
  }

  ::ng-deep .help-tooltip-button {
    my-global-icon {
      color: pvar(--input-placeholder);
      height: $markdown-icon-height;
      width: $markdown-icon-width;

      svg {
        border-radius: 3px;
      }
    }

    &:focus my-global-icon {
      color: pvar(--input-fg);
    }
  }
}

.comment-buttons {
  display: flex;
  justify-content: flex-end;
}

.emoji-flex {
  display: flex;
  flex-flow: row wrap;
  align-items: center;

  .emoji-flex-item {
    text-align: left;
    margin: auto;
    min-width: 227px;
    flex: 1;

    code {
      display: inline-block;
      vertical-align: middle;

      @include margin-left(5px);
    }
  }
}

@media screen and (max-width: 600px) {
  textarea,
  .comment-buttons button {
    font-size: 14px !important;
  }

  textarea {
    padding: 5px !important;
  }
}

.modal-body {
  > span {
    float: left;
    margin-bottom: 20px;
  }
}
